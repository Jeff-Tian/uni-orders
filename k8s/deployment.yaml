apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: uni-orders
    tier: backend
    deployedBy: deploy-node-app
  name: uni-orders
spec:
  minReadySeconds: 5
  progressDeadlineSeconds: 600
  replicas: 2
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: uni-orders
      tier: backend
  strategy:
    rollingUpdate:
      maxSurge: 50%
      maxUnavailable: 50%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: uni-orders
        tier: backend
        deployedBy: deploy-node-app
    spec:
      containers:
        - image: jefftian/uni-orders
          imagePullPolicy: Always
          name: uni-orders
          env:
            - name: GET_HOSTS_FROM
              value: dns
            - name: pgHost
              valueFrom:
                secretKeyRef:
                  key: pgHost
                  name: uni-orders-secrets
            - name: pgPort
              valueFrom:
                secretKeyRef:
                  key: pgPort
                  name: uni-orders-secrets
            - name: pgUsername
              valueFrom:
                secretKeyRef:
                  key: pgUsername
                  name: uni-orders-secrets
            - name: pgPassword
              valueFrom:
                secretKeyRef:
                  key: pgPassword
                  name: uni-orders-secrets
            - name: POSTGRES_URL
              valueFrom:
                secretKeyRef:
                  key: POSTGRES_URL
                  name: uni-orders-secrets
            - name: pgDatabase
              valueFrom:
                secretKeyRef:
                  key: pgDatabase
                  name: uni-orders-secrets
          ports:
            - containerPort: 3000
              name: http
              protocol: TCP
            - containerPort: 5005
              name: grpc
              protocol: TCP
          readinessProbe:
            exec:
              command: ['/bin/grpc_health_probe', '-addr=:5005']
            initialDelaySeconds: 5
            periodSeconds: 10
            failureThreshold: 30
          # * spec.template.spec.containers[0].readinessProbe.httpGet: Forbidden: may not specify more than 1 handler type
          #            httpGet:
          #              port: 3000
          #              path: /health
          livenessProbe:
            exec:
              command: ['/bin/grpc_health_probe', '-addr=:5005']
            initialDelaySeconds: 5
            periodSeconds: 10
            failureThreshold: 30
          # * spec.template.spec.containers[0].livenessProbe.httpGet: Forbidden: may not specify more than 1 handler type
          #            httpGet:
          #              port: 3000
          #              path: /
          resources:
            limits:
              cpu: 500m
              memory: 128Mi
            requests:
              cpu: 250m
              memory: 64Mi
          envFrom: []
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
